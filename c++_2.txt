# To jest format pliku w którym zapisujemy pytania
# oraz 4 odpowiedzi z zaznaczeniem odpowiedniej
# Niech + oznacza prawidłową odpowiedź
# Znak - oznacza niepoprawną
# Quiz powinien być jednokrotnego wyboru.

# Poziom 2

# Proszę dopisywać swoje pytania

#Pytania Angelika

Skladniki klasy opatrzone etykieta protected sa dostepne w:
+ danej klasie i w klasach dziedziczacych
- danej klasie
- wszedzie poza klasa
- zadne z podanych

Ktore z ponizszych nie jest slowem kluczowym w C++?
+ extends
- volatile
- friend
- this

____________ to funkcja skladowa, ktora powinna zostac ponownie zdefiniowana w klasach pochodnych.
+ funkcja wirtualna
- funkcja zaprzyjazniona
- funkcja statyczna
- funkcja stala

W C++ do rzucania wyjatkow uzywa sie slowa: 
+ throw
- throws
- threw
- thrown

Ktory operator jest operatorem potegowania w C++?
+ zaden z podanych
- ^
- **
- ^^

#Paweł D., pytania cpp zestaw 2
Prawidlowa iteracja po wszystkich elementach tablicy 10 elementowej to:
- for (int i = 1; i < 11; ++i)
- for (int i = 0; i <= 10; ++i)
+ for (int i = 0; i < 10; ++i)
- for (int i = 1; i < 10; ++i)

W funkcji void foo(int& x) przekazujemy parametr przez:
- warosc
+ referencje
- wartosci wskaznika
- zadna z powyzszych

Najlepsza nazwa dla funkcji bool foo(int x) sprawdzajacej czy x jest nieparzysta:
- checkIfGivenNumberIsOddAndReturnTrueOrFalse(int x);
+ isOdd(int x);
- odd(int x);
- oddOrEven(int x);

Aby zwiekszyc czytelnosc kodu wartosci numeryczne mozemy zmienic na:
- stringi
- obiekty
+ enum
- czytelnosc kodu jest niewazna

Domyslnie dostep do wszystkich elementow klasy jest ustawiony na:
- public
+ private
- protected
- topsecret

#Kamil Frelichowski, pytania cpp zestaw 2

Przy przeciazeniu dwóch funkcji:
- Funkcje moga sie róznic tylko typem zwracanym
- Funkcje moga róznic sie typem argumentów
- Funkcje moga róznic sie iloscia argumentów
+ B i C sa prawidlowe


Konstruktor
- Zwraca typ
- Moze znajdowac sie w sekcji private
- Nie moze byc przeciazony
+ Nie moze byc dziedziczony



Automatycznie generowany konstruktor kopiujacy jest zawsze:
+ public
- private
- protected
- public,ale tylko w klasie bazowej


Klasa abstrakcyjna
- Musi miec wszystkie metody czysto wirtualne
- Wystarczy jedna metoda czytso wirtualna
- Nie mozna utworzyc obiektu takiej klasy
+ B i C sa prawidlowe


Destruktor wirtualny
+ Nalezy stosowac zawsze w klasie bazowej
- Nalezy stosowac tylko,gdy  klasa posiada prznjamniej jedna metode wirtualna
- nie moze byc czysto wirtualny
- Nalezy stosowac w klasie wystepuje konstruktor wirtualny
